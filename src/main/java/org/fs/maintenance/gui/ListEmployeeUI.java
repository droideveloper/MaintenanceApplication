/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fs.maintenance.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JPanel;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.fs.maintenance.controllers.IListEmployeeController;
import org.fs.maintenance.entities.Employee;
import org.fs.maintenance.entities.Task;
import org.fs.maintenance.utils.StringUtility;
import org.fs.maintenance.views.IListEmployeeView;

/**
 *
 * @author Fatih
 */
public class ListEmployeeUI extends javax.swing.JPanel implements IListEmployeeView, 
                                                                  ActionListener, 
                                                                  ListSelectionListener {

    /**
     * Creates new form ListEmployeeUI
     */
    private ListEmployeeUI() {
        initComponents();
        init();
    }
    
    public static ListEmployeeUI createView() {
        return new ListEmployeeUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        javax.swing.JScrollPane listScrollPane = new javax.swing.JScrollPane();
        employeeList = new javax.swing.JList();
        lblError = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        btnSelect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblTaskDescription = new javax.swing.JTextArea();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        lblCurrentTaskID = new javax.swing.JLabel();
        lblTaskTitle = new javax.swing.JLabel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();

        btnBack.setText("Back");

        listScrollPane.setViewportView(employeeList);

        lblError.setForeground(new java.awt.Color(255, 51, 51));
        lblError.setText("jLabel5");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee Information"));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Start Date");
        jLabel2.setToolTipText("");

        btnSelect.setText("Select");

        lblTaskDescription.setEditable(false);
        lblTaskDescription.setColumns(20);
        lblTaskDescription.setRows(5);
        jScrollPane2.setViewportView(lblTaskDescription);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Task Description");

        lblStartDate.setText("jLabel3");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Task Title");

        lblCurrentTaskID.setText("jLabel2");

        lblTaskTitle.setText("jLabel4");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Current Task ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurrentTaskID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTaskTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSelect))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCurrentTaskID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblStartDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTaskTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelect)
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("ID");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Count");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Name");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Surname");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addGap(91, 91, 91)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(lblError)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSelect;
    private javax.swing.JList employeeList;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCurrentTaskID;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JTextArea lblTaskDescription;
    private javax.swing.JLabel lblTaskTitle;
    // End of variables declaration//GEN-END:variables
    
    private final static String BTN_BACK    = "Back";
    private final static String BTN_SELECT  = "Select";
    
    private IListEmployeeController controller;
        
    private SimpleDateFormat dateFormat;
    
    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(BTN_BACK.equalsIgnoreCase(cmd)) {
            back();
        } else if(BTN_SELECT.equalsIgnoreCase(cmd)) {
            select();
        } else {
            throw new UnsupportedOperationException(String.format(Locale.getDefault(), "%s command is not supported.", cmd));
        }
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if(employeeList.getSelectedIndex() >= 0) {
            selectAt(employeeList.getSelectedIndex());
        }
    }
    
    @Override
    public void init() {
        employeeList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        employeeList.addListSelectionListener(this);
        btnSelect.addActionListener(this);
        btnBack.addActionListener(this);
        lblError.setText(null);
        lblError.setVisible(false);
        
        //clear detail labels
        lblCurrentTaskID.setText(null);
        lblStartDate.setText(null);
        lblTaskTitle.setText(null);
        lblTaskDescription.setText(null);     
        
        dateFormat = new SimpleDateFormat(StringUtility.SECOND_DATE_FORMAT, Locale.getDefault());
    }

    @Override
    public void showError(String message) {
        lblError.setText(message);
        if(!lblError.isVisible()) {
            lblError.setVisible(true);
        }
    }

    @Override
    public void hideError() {
        lblError.setText(null);
        if(lblError.isVisible()) {
            lblError.setVisible(false);
        }        
    }

    @Override
    public void selectAt(int index) {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }        
        controller.selectAt(index);
    }

    @Override
    public void displayEmployees(ListModel<Employee> empModel) {
        if(empModel == null) {
            throw new NullPointerException("employee list model is null");
        }
        employeeList.setModel(empModel);
        employeeList.setCellRenderer(ListEmployeeCell.createView());
    }

    @Override
    public void displayEmployeeDetail(Task task) {
        if(task == null) {
            throw new NullPointerException("task is null");
        }
        lblCurrentTaskID.setText(String.valueOf(task.getId()));
        lblStartDate.setText(dateFormat.format(task.getStartDate()));
        lblTaskTitle.setText(task.getTitle());
        lblTaskDescription.setText(task.getDescription());
    }

    @Override
    public void back() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.back();
    }

    @Override
    public void select() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }     
        controller.select();
    }

    @Override
    public void setController(IListEmployeeController controller) {
        this.controller = controller;
    }
    
    @Override
    public String getWindowName() {
        return ListEmployeeUI.class.getSimpleName();
    }

    @Override
    public JPanel createContentView() {
        return this;
    }
}
