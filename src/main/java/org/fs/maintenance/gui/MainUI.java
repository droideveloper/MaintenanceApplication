/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fs.maintenance.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JPanel;
import org.fs.maintenance.controllers.IMainController;
import org.fs.maintenance.views.IMainView;

/**
 *
 * @author Fatih
 */
public class MainUI extends javax.swing.JPanel implements IMainView, 
                                                          ActionListener {

    /**
     * Creates new form MainUI
     */
    private MainUI() {
        initComponents();
        init();
    }
    
    public static MainUI createView() {
        return new MainUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSignout = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnCreateRequest = new javax.swing.JButton();
        btnAssingTask = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        btnCompleteTask = new javax.swing.JButton();
        btnApproveRequest = new javax.swing.JButton();

        btnSignout.setText("Sign out");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Available Operations"));

        btnCreateRequest.setText("Create Request");

        btnAssingTask.setText("Assign Task");

        btnReport.setText("Reports");

        btnCompleteTask.setText("Complete Task");

        btnApproveRequest.setText("Approve Request");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCompleteTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCreateRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnApproveRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAssingTask, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnApproveRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAssingTask, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCompleteTask, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSignout))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSignout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproveRequest;
    private javax.swing.JButton btnAssingTask;
    private javax.swing.JButton btnCompleteTask;
    private javax.swing.JButton btnCreateRequest;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSignout;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    
    private final static String BTN_APPROVE_REQUEST = "Approve Request";
    private final static String BTN_ASSIGN_TASK     = "Assign Task";
    private final static String BTN_COMPLETE_TASK   = "Complete Task";
    private final static String BTN_CREATE_REQUEST  = "Create Request";
    private final static String BTN_REPORT          = "Reports";
    private final static String BTN_SIGN_OUT        = "Sign out";    
    
    private IMainController controller;
    
    @Override
    public void init() {
        btnApproveRequest.addActionListener(this);
        btnAssingTask.addActionListener(this);
        btnCompleteTask.addActionListener(this);
        btnCreateRequest.addActionListener(this);
        btnReport.addActionListener(this);
        btnSignout.addActionListener(this);
    }

    @Override
    public void switchDepartmentManagerContent() {
        btnApproveRequest.setEnabled(true);
        btnCreateRequest.setEnabled(true);        
        btnCompleteTask.setEnabled(false);
        btnAssingTask.setEnabled(false);
        btnReport.setEnabled(false);
    }

    @Override
    public void switchDepartmentEmployeeContent() {
        btnCreateRequest.setEnabled(true);        
        btnApproveRequest.setEnabled(false);
        btnCompleteTask.setEnabled(false);
        btnAssingTask.setEnabled(false);
        btnReport.setEnabled(false);
    }

    @Override
    public void switchEmployeeContent() {
        btnCreateRequest.setEnabled(false);        
        btnApproveRequest.setEnabled(false);
        btnCompleteTask.setEnabled(true);
        btnAssingTask.setEnabled(false);
        btnReport.setEnabled(false);       
    }

    @Override
    public void switchManagerContent() {
        btnCreateRequest.setEnabled(false);        
        btnApproveRequest.setEnabled(true);
        btnCompleteTask.setEnabled(false);
        btnAssingTask.setEnabled(true);
        btnReport.setEnabled(true);           
    }   
    
    @Override
    public void selectCreateRequest() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.selectCreateRequest();
    }

    @Override
    public void selectApproveRequest() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }     
        controller.selectApproveRequest();
    }

    @Override
    public void selectReports() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }     
        controller.selectReports();
    }

    @Override
    public void selectCompleteTask() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }        
        controller.selectCompleteTask();
    }

    @Override
    public void selectAssignTask() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }     
        controller.selectAssignTask();
    }

    @Override
    public void signout() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.signout();
    }

    @Override
    public String getWindowName() {
        return MainUI.class.getSimpleName();
    }

    @Override
    public void setController(IMainController controller) {
        this.controller = controller;
    }

    @Override
    public JPanel createContentView() {
        return this;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(BTN_APPROVE_REQUEST.equalsIgnoreCase(cmd)) {
            selectApproveRequest();
        } else if(BTN_ASSIGN_TASK.equalsIgnoreCase(cmd)) {
            selectAssignTask();
        } else if(BTN_COMPLETE_TASK.equalsIgnoreCase(cmd)) {
            selectCompleteTask();
        } else if(BTN_CREATE_REQUEST.equalsIgnoreCase(cmd)) {
            selectCreateRequest();
        } else if(BTN_REPORT.equalsIgnoreCase(cmd)) {
            selectReports();
        } else if(BTN_SIGN_OUT.equalsIgnoreCase(cmd)) {
            signout();
        } else {
            throw new UnsupportedOperationException(String.format("command %s not supported", cmd));
        }
    }
}
