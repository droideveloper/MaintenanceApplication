/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fs.maintenance.gui;

import java.awt.Color;
import java.awt.Component;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import org.fs.maintenance.common.Pair;
import org.fs.maintenance.entities.Employee;
import org.fs.maintenance.entities.Task;
import org.fs.maintenance.utils.StringUtility;

/**
 *
 * @author Fatih
 */
public class EmployeeProgressCell extends javax.swing.JPanel implements ListCellRenderer<Pair<Employee, Task>>{

    /**
     * Creates new form EmployeeProgressCell
     */
    private EmployeeProgressCell() {
        initComponents();
        init();
    }

    public static EmployeeProgressCell createView() {
        return new EmployeeProgressCell();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTaskID = new javax.swing.JLabel();
        lblTaskTitle = new javax.swing.JLabel();
        lblEmployeeName = new javax.swing.JLabel();

        lblTaskID.setText("jLabel1");

        lblTaskTitle.setText("jLabel2");

        lblEmployeeName.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTaskID)
                .addGap(18, 18, 18)
                .addComponent(lblTaskTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaskID)
                    .addComponent(lblTaskTitle)
                    .addComponent(lblEmployeeName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
   
    private Color firstColor;
    private Color secondColor;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblEmployeeName;
    private javax.swing.JLabel lblTaskID;
    private javax.swing.JLabel lblTaskTitle;
    // End of variables declaration//GEN-END:variables

    private void init() {
        firstColor = StringUtility.hex2Rgb(StringUtility.FIRST_COLOR_STR);
        secondColor = StringUtility.hex2Rgb(StringUtility.SECOND_COLOR_STR);
    }
    
    @Override
    public Component getListCellRendererComponent(JList<? extends Pair<Employee, Task>> list, Pair<Employee, Task> value, int index, boolean isSelected, boolean cellHasFocus) {
        if(index == 0) {
            lblTaskID.setText("ID");
            lblTaskTitle.setText("TASK TITLE");
            lblEmployeeName.setText("EMPLOYEE NAME");
            setBackground(StringUtility.hex2Rgb(StringUtility.SELECTED_COLOR_STR));
        } else {
            Task t = value.getValue();
            Employee e = value.getKey();
            lblTaskID.setText(String.valueOf(t.getId()));
            lblTaskTitle.setText(t.getTitle());
            lblEmployeeName.setText(e.getName());
            boolean mod = index % 2 == 0;
            if(mod) {
                setBackground(firstColor);
            } else {
                setBackground(secondColor);
            }  
        }
        return this;
    }
}
