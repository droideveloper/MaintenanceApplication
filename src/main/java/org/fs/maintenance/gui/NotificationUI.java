/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fs.maintenance.gui;

import java.awt.Component;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import org.fs.maintenance.controllers.INotificationController;
import org.fs.maintenance.entities.Notification;
import org.fs.maintenance.views.INotificationView;

/**
 *
 * @author Fatih
 */
public class NotificationUI extends javax.swing.JPanel implements INotificationView, 
                                                                     ActionListener {

    /**
     * Creates new form NotificationUI
     */
    private NotificationUI() {
        initComponents();
        init();
    }
    
    public static NotificationUI createView() {
        return new NotificationUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JButton();
        imgView = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();

		String typePath = String.format(Locale.ENGLISH, 
                                        IMG_PATH,  
                                        System.getProperty("user.images"), "close_w");
        btnClose.setIcon(new javax.swing.ImageIcon(typePath)); // NOI18N
        btnClose.setActionCommand("Close");
        btnClose.setBorder(null);
        btnClose.setMaximumSize(new java.awt.Dimension(32, 32));
        btnClose.setMinimumSize(new java.awt.Dimension(32, 32));
        btnClose.setPreferredSize(new java.awt.Dimension(32, 32));

        imgView.setMaximumSize(new java.awt.Dimension(64, 64));
        imgView.setMinimumSize(new java.awt.Dimension(64, 64));
        imgView.setPreferredSize(new java.awt.Dimension(64, 64));
        imgView.setSize(new java.awt.Dimension(64, 64));

        lblTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText("jLabel1");
        lblTitle.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(imgView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imgView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel imgView;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables

    private final static String BTN_CLOSE = "Close";
    private final static String IMG_PATH  = "%s/%s.png";
    
    private INotificationController controller;
    
    @Override
    public void init() {
        lblTitle.setText(null);
        btnClose.addActionListener(this);
    }

    @Override
    public void display(Notification notification) {
        if(notification == null) {
            throw new NullPointerException("notification is null");
        }
        lblTitle.setText(notification.getTitle());
        String typePath = String.format(Locale.ENGLISH, 
                                        IMG_PATH,  
                                        System.getProperty("user.images"), notification.getType().getValue());
        imgView.setIcon(new ImageIcon(typePath));
    }

    @Override
    public void close() {
        if(controller == null) {
            throw new NullPointerException("yopu should bind view to controller");
        }
        controller.close();
    }

    @Override
    public String getWindowName() {
        return "";
    }
    
    @Override
    public void setController(INotificationController controller) {
        this.controller = controller;
    }

    @Override
    public JPanel createContentView() {
        return this;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(BTN_CLOSE.equalsIgnoreCase(cmd)) {
            close();
        }
    }
}
