/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fs.maintenance.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.JPanel;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.fs.maintenance.controllers.IListTaskController;
import org.fs.maintenance.entities.Department;
import org.fs.maintenance.entities.Request;
import org.fs.maintenance.entities.Task;
import org.fs.maintenance.entities.User;
import org.fs.maintenance.utils.StringUtility;
import org.fs.maintenance.views.IListTaskView;

/**
 *
 * @author Fatih
 */
public class ListTaskUI extends javax.swing.JPanel implements IListTaskView, 
                                                              ActionListener, 
                                                              ListSelectionListener {

    /**
     * Creates new form ListTaskUI
     */
    private ListTaskUI() {
        initComponents();
        init();
    }
    
    public static ListTaskUI createView() {
        return new ListTaskUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        listTask = new javax.swing.JList();
        lblError = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        lblCreateDate = new javax.swing.JLabel();
        lblTaskTitle = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        lblTaskDescription = new javax.swing.JTextArea();
        lblTaskID = new javax.swing.JLabel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        lblAssignDate = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        lblDepartment = new javax.swing.JLabel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        btnSelect = new javax.swing.JButton();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();

        btnBack.setText("Back");

        jScrollPane1.setViewportView(listTask);

        lblError.setForeground(new java.awt.Color(255, 51, 51));
        lblError.setText("jLabel8");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected Task Information"));

        lblCreateDate.setText("jLabel6");

        lblTaskTitle.setText("jLabel6");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Task Description");

        lblTaskDescription.setEditable(false);
        lblTaskDescription.setColumns(20);
        lblTaskDescription.setRows(5);
        jScrollPane2.setViewportView(lblTaskDescription);

        lblTaskID.setText("jLabel2");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Assign Date");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Create Date");

        lblAssignDate.setText("jLabel9");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Department");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Task Title");

        lblDepartment.setText("jLabel4");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Task ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblTaskTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblTaskID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCreateDate))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDepartment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblAssignDate)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaskID)
                    .addComponent(lblCreateDate))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment)
                    .addComponent(lblAssignDate))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTaskTitle)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnSelect.setText("Select");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("ID");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Date");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setText("Task Title");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSelect))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6)
                                .addGap(41, 41, 41)
                                .addComponent(jLabel9)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblError)
                                .addGap(0, 364, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnSelect))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(lblError)
                        .addContainerGap(94, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSelect;
    private javax.swing.JLabel lblAssignDate;
    private javax.swing.JLabel lblCreateDate;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblError;
    private javax.swing.JTextArea lblTaskDescription;
    private javax.swing.JLabel lblTaskID;
    private javax.swing.JLabel lblTaskTitle;
    private javax.swing.JList listTask;
    // End of variables declaration//GEN-END:variables

    private final static String BTN_BACK    = "Back";
    private final static String BTN_SELECT  = "Select";
    
    private IListTaskController controller;
    
    private SimpleDateFormat dateFormat;
    
    @Override
    public void init() {
        btnBack.addActionListener(this);
        btnSelect.addActionListener(this);
        listTask.addListSelectionListener(this);
        
        lblError.setVisible(false);
        //clear resources
        lblAssignDate.setText(null);
        lblCreateDate.setText(null);
        lblDepartment.setText(null);
        lblError.setText(null);
        lblTaskDescription.setText(null);
        lblTaskID.setText(null);
        lblTaskTitle.setText(null);
        
        dateFormat = new SimpleDateFormat(StringUtility.FIRST_DATE_FORMAT, Locale.getDefault());
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(BTN_BACK.equalsIgnoreCase(cmd)) {
            back();
        } else if(BTN_SELECT.equalsIgnoreCase(cmd)) {
            select();
        } else {
            throw new UnsupportedOperationException(String.format(Locale.getDefault(), "%s command is not recognized", cmd));
        }
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if(listTask.getSelectedIndex() >= 0) {
            selectAt(listTask.getSelectedIndex());
        }
        hideError();
    }
    
    @Override
    public void showError(String msg) {
        lblError.setText(msg);
        if(!lblError.isVisible()) {
            lblError.setVisible(true);
        }        
    }

    @Override
    public void hideError() {
        lblError.setText(null);
        if(lblError.isVisible()) {
            lblError.setVisible(false);
        }
    }

    @Override
    public void back() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }  
        controller.back();
    }

    @Override
    public void select() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }   
        controller.select();
    }

    @Override
    public void selectAt(int index) {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.selectAt(index);
    }

    @Override
    public void displayDetail(Task t) {
        if(t == null) {
            throw new NullPointerException("task is null");
        }
        lblTaskID.setText(String.valueOf(t.getId()));
        lblTaskTitle.setText(t.getTitle());
        lblTaskDescription.setText(t.getDescription());
        if(t.getUpdateDate() != null) {
            lblAssignDate.setText(dateFormat.format(t.getUpdateDate()));
        } else {
            lblAssignDate.setText("NaN");
        }
        lblCreateDate.setText(dateFormat.format(t.getCreateDate()));
        Request request = t.getRequest();
        if(request != null) {
            User usr = request.getUser();
            if(usr != null) {
                Department dept = controller.retrieveDepartmentByUser(usr);
                if(dept != null) {
                    lblDepartment.setText(dept.getDepartmentName());
                }
            }
        }
    }

    @Override
    public void displayTasks(ListModel<Task> taskModel) {
        if(taskModel == null) {
            throw new NullPointerException("task model is null");
        }
        listTask.setModel(taskModel);
        listTask.setCellRenderer(ListTaskCell.createView());
    }

    @Override
    public void setController(IListTaskController controller) {
        this.controller = controller;
    }

    @Override
    public String getWindowName() {
        return ListTaskUI.class.getSimpleName();
    }

    @Override
    public JPanel createContentView() {
        return this;
    }
}
