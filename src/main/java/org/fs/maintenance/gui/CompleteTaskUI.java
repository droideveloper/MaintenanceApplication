/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fs.maintenance.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.swing.ComboBoxModel;
import javax.swing.JPanel;
import org.fs.maintenance.controllers.ICompleteTaskController;
import org.fs.maintenance.entities.Department;
import org.fs.maintenance.entities.Request;
import org.fs.maintenance.entities.Task;
import org.fs.maintenance.entities.TaskStatus;
import org.fs.maintenance.entities.User;
import org.fs.maintenance.utils.StringUtility;
import org.fs.maintenance.views.ICompleteTaskView;

/**
 *
 * @author Fatih
 */
public class CompleteTaskUI extends javax.swing.JPanel implements ICompleteTaskView,
                                                                  ActionListener {

    /**
     * Creates new form CompleteTaskUI
     */
    private CompleteTaskUI() {
        initComponents();
        init();
    }
    
    public static CompleteTaskUI createView() {
        return new CompleteTaskUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        lblDepartment = new javax.swing.JLabel();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        lblTaskID = new javax.swing.JLabel();
        lblCreateDate = new javax.swing.JLabel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        lblTaskTitle = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        lblTaskDescription = new javax.swing.JTextArea();
        lblAssignDate = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();

        btnBack.setText("Back");

        lblError.setForeground(new java.awt.Color(255, 51, 51));
        lblError.setText("jLabel12");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Task Information"));

        btnSave.setText("Save");

        lblDepartment.setText("jLabel4");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel10.setText("Assign Date");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel7.setText("Task Description");

        lblTaskID.setText("jLabel2");

        lblCreateDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreateDate.setText("jLabel9");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Department");

        lblTaskTitle.setText("jLabel6");

        lblTaskDescription.setEditable(false);
        lblTaskDescription.setColumns(20);
        lblTaskDescription.setRows(5);
        jScrollPane1.setViewportView(lblTaskDescription);

        lblAssignDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAssignDate.setText("jLabel11");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Task Title");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Task ID");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Create Date");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTaskTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTaskID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDepartment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAssignDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCreateDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaskID)
                    .addComponent(lblCreateDate))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment)
                    .addComponent(lblAssignDate))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTaskTitle)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(0, 421, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblError)
                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox comboStatus;
    private javax.swing.JLabel lblAssignDate;
    private javax.swing.JLabel lblCreateDate;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblError;
    private javax.swing.JTextArea lblTaskDescription;
    private javax.swing.JLabel lblTaskID;
    private javax.swing.JLabel lblTaskTitle;
    // End of variables declaration//GEN-END:variables

    private final static String BTN_BACK = "Back";
    private final static String BTN_SAVE = "Save";
    
    private ICompleteTaskController controller;
    
    private SimpleDateFormat dateFormat;
    
    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(BTN_BACK.equalsIgnoreCase(cmd)) {
            back();
        } else if(BTN_SAVE.equalsIgnoreCase(cmd)) {
            save();
        } else {
            selectAt(comboStatus.getSelectedIndex());
            hideError();
        }
    }
    
    @Override
    public void init() {
        btnBack.addActionListener(this);
        btnSave.addActionListener(this);
        comboStatus.addActionListener(this);
        
        lblError.setVisible(false);
        dateFormat = new SimpleDateFormat(StringUtility.FIRST_DATE_FORMAT, Locale.getDefault());
    }

    @Override
    public void showError(String msg) {
        lblError.setText(msg);
        if(!lblError.isVisible()) {
            lblError.setVisible(false);
        }
    }

    @Override
    public void hideError() {
        lblError.setText(null);
        if(lblError.isVisible()) {
            lblError.setVisible(true);
        }        
    }

    @Override
    public void selectAt(int index) {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.selectAt(index);
    }

    @Override
    public void displayTaskStatus(ComboBoxModel<TaskStatus> taskStatus) {
        if(taskStatus == null) {
            throw new NullPointerException("task status model is null");
        }
        comboStatus.setMaximumRowCount(3);
        comboStatus.setModel(taskStatus);
        comboStatus.setRenderer(TaskStatusBox.createView());
    }

    @Override
    public void displayDetail(Task t) {
        if(t == null) {
            throw new NullPointerException("task is null");
        }
        lblTaskID.setText(String.valueOf(t.getId()));
        lblTaskTitle.setText(t.getTitle());
        lblTaskDescription.setText(t.getDescription());
        Request request = t.getRequest();
        if(request != null) {
            User usr = request.getUser();
            if(usr != null) {
                Department dept = controller.retrieveDepartmentByUser(usr);
                if(dept != null) {
                    lblDepartment.setText(dept.getDepartmentName());
                }
            }
        }
        lblCreateDate.setText(dateFormat.format(t.getCreateDate()));
        lblAssignDate.setText(dateFormat.format(t.getUpdateDate()));
        comboStatus.setSelectedItem(t.getStatus());
    }

    @Override
    public void save() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.save();
    }
    
    @Override
    public void setController(ICompleteTaskController controller) {
        this.controller = controller;
    }

    @Override
    public void back() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.back();
    }

    @Override
    public String getWindowName() {
        return CompleteTaskUI.class.getSimpleName();
    }

    @Override
    public JPanel createContentView() {
        return this;
    }
}
