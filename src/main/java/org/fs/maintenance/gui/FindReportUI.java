/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fs.maintenance.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;
import javax.swing.ComboBoxModel;
import javax.swing.JPanel;
import org.fs.maintenance.controllers.IFindReportController;
import org.fs.maintenance.entities.ReportType;
import org.fs.maintenance.views.IFindReportView;

/**
 *
 * @author Fatih
 */
public class FindReportUI extends javax.swing.JPanel implements IFindReportView,
                                                                ActionListener {

    /**
     * Creates new form FindReportUI
     */
    private FindReportUI() {
        initComponents();
        init();
    }
    
    public static FindReportUI createView() {
        return new FindReportUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        comboReportType = new javax.swing.JComboBox();
        btnFind = new javax.swing.JButton();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();

        btnBack.setText("Back");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Select Report"));

        comboReportType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        btnFind.setText("Find");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("Report Types");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(btnFind))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboReportType, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboReportType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btnFind)
                .addContainerGap())
        );

        lblError.setForeground(new java.awt.Color(255, 51, 51));
        lblError.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnBack)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblError)
                .addContainerGap(59, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFind;
    private javax.swing.JComboBox comboReportType;
    private javax.swing.JLabel lblError;
    // End of variables declaration//GEN-END:variables
    
    private IFindReportController controller;
    
    private final static String BTN_BACK = "Back";
    private final static String BTN_FIND = "Find";
        
    @Override
    public void actionPerformed(ActionEvent e) {
        String cmd = e.getActionCommand();
        if(BTN_BACK.equalsIgnoreCase(cmd)) {
            back();
        } else if(BTN_FIND.equalsIgnoreCase(cmd)) {
            find();
        } else {
            throw new UnsupportedOperationException(String.format(Locale.getDefault(), "%s command is not recognized", cmd));
        }
    }
    
    @Override
    public void init() {
        btnBack.addActionListener(this);
        btnFind.addActionListener(this);
        lblError.setVisible(false);
        
        comboReportType.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                selectReportTypeAt(comboReportType.getSelectedIndex());
                hideError();
            }
        });     
        
    }

    @Override
    public void selectReportTypeAt(int index) {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }   
        controller.selectReportTypeAt(index);
    }

    @Override
    public void displayReportTypes(ComboBoxModel<ReportType> reportTypeModel) {
        if(reportTypeModel == null) {
            throw new NullPointerException("report type model is null");
        }
        comboReportType.setModel(reportTypeModel);
    }   

    @Override
    public void showError(String msg) {
        lblError.setText(msg);
        if(!lblError.isVisible()) {
            lblError.setVisible(true);
        }
    }

    @Override
    public void hideError() {
        lblError.setText(null);
        if(lblError.isVisible()) {
            lblError.setVisible(false);
        }        
    }

    @Override
    public void back() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }     
        controller.back();
    }

    @Override
    public void find() {
        if(controller == null) {
            throw new NullPointerException("you should bind view to controller");
        }
        controller.find();
    }

    @Override
    public void setController(IFindReportController controller) {
        this.controller = controller;
    }

    @Override
    public String getWindowName() {
        return FindReportUI.class.getSimpleName();
    }

    @Override
    public JPanel createContentView() {
        return this;
    }
}
